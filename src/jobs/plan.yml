description: >
  Run Terraform plan against current state

parameters:
  attach-workspace:
    default: false
    description: "Do cool stuff with workspaces"
    type: boolean
  workspace-root:
    default: "."
    description: "Workspace root path that is either an absolute path or a path relative to the working directory. Defaults to '.' (the working directory)"
    type: string
  path:
    type: "string"
    description: "Path to the terraform module"
    default: "."
  persist-workspace:
    type: boolean
    default: false
    description: "Persist files to (cci) workspace for use in subsequent jobs"
  workspace-path:
    default: "."
    description: "Path of the workspace to persist to relative to workspace-root."
    type: string
  checkout:
    type: boolean
    default: true
    description: "Perform checkout as first step in job."
  var:
    type: "string"
    description: "Comma separated list of vars to set, e.g. 'foo=bar,bas=foo'"
    default: ""
  var_file:
    type: "string"
    description: "Comma separated list of var file paths"
    default: ""
  workspace:
    type: "string"
    description: "Name of the terraform workspace"
    default: ""
  backend_config:
    type: "string"
    description: |
      "Comma separated list of backend configs to set, e.g. 'foo=bar'"
    default: ""
  backend_config_file:
    type: "string"
    description: "Path to a backend config file"
    default: ""
  cli_config_file:
    type: "string"
    description: "Path to terraform cli config file"
    default: ""
  tag:
    description: "Specify the Terraform Docker image tag for the executor"
    type: "string"
    default: "1.0.0" # update commands/install when updating this
  out:
    type: string
    description: The file path to save your terraform plan to.
    default: "plan.out"
  timeout:
    description: "Configure a custom timeout limit"
    type: "string"
    default: "10m"
  lock-timeout:
    description: Configure a custom state lock timeout
    type: string
    default: 30s
  resource_class:
    description: "Specify the resource class for Docker Executor"
    type: "string"
    default: "medium"

executor:
  name: default
  tag: << parameters.tag >>
  resource_class: << parameters.resource_class >>

steps:
  - when:
      condition: << parameters.checkout >>
      steps:
        - checkout
  - when:
      condition: << parameters.attach-workspace >>
      steps:
        - attach_workspace:
            at: << parameters.workspace-root >>
  - init:
      path: << parameters.path >>
      backend_config: << parameters.backend_config >>
      backend_config_file: << parameters.backend_config_file >>
      cli_config_file: << parameters.cli_config_file >>
      timeout: <<parameters.timeout>>
  - plan:
      path: << parameters.path >>
      var: << parameters.var >>
      var_file: << parameters.var_file >>
      workspace: << parameters.workspace >>
      backend_config: << parameters.backend_config >>
      backend_config_file: << parameters.backend_config_file >>
      cli_config_file: << parameters.cli_config_file >>
      out: << parameters.out >>
      timeout: <<parameters.timeout>>
      lock-timeout: <<parameters.lock-timeout>>
  - when:
      condition: << parameters.persist-workspace >>
      steps:
        - persist_to_workspace:
            paths:
              - << parameters.workspace-path >>
            root: << parameters.workspace-root >>
