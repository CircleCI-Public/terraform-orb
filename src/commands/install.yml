description: |
  Install specified version of terraform.

parameters:
  terraform_version:
    type: "string"
    description: "Specify version of terraform to install."
    default: "0.13.5"
  os:
    type: enum
    description: "Specify the operating system version to install. Must be one of these values: linux, darwin"
    default: "linux"
    enum: ["linux", "darwin"]
  arch:
    type: enum
    description: "Specify the platform architecture to install. Must be one of these values: amd64, arm64"
    default: "amd64"
    enum: ["amd64", "arm64"]

steps:
  - run:
      name: Install terraform binary
      command: |
        wget -P /tmp https://releases.hashicorp.com/terraform/<< parameters.terraform_version >>/terraform_<< parameters.terraform_version >>_<< parameters.os >>_<< parameters.arch >>.zip
        wget -nv https://releases.hashicorp.com/terraform/<< parameters.terraform_version >>/terraform_<< parameters.terraform_version >>_SHA256SUMS

        # Validate checksum
        expected_sha=$(cat terraform_<< parameters.terraform_version >>_SHA256SUMS | grep "terraform_<< parameters.terraform_version >>_<< parameters.os >>_<< parameters.arch >>.zip" | awk '{print $1}')
        download_sha=$(shasum -a 256 "/tmp/terraform_<< parameters.terraform_version >>_<< parameters.os >>_<< parameters.arch >>.zip" | cut -d' ' -f1)
        echo "Validating download..."
        if [ $expected_sha != $download_sha ]; then
          echo "Expected SHA256SUM does not match downloaded file, exiting."
          exit 1
        fi

        if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi
        unzip -o /tmp/terraform_<< parameters.terraform_version >>_<< parameters.os >>_<< parameters.arch >>.zip -d /tmp
        $SUDO mv /tmp/terraform /usr/local/bin
        terraform version
