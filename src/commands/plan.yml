description: |
  Execute 'terraform plan' against current state.

parameters:
  destroy_plan:
    type: boolean
    description: Run this plan as a destroy plan.
    default: false
  path:
    type: "string"
    description: "Path to the terraform module"
    default: "."
  var:
    type: "string"
    description: "Comma separated list of var to set, e.g. 'foo=bar,bas=foo'"
    default: ""
  var_file:
    type: "string"
    description: "Comma separated list of var file paths"
    default: ""
  workspace:
    type: "string"
    description: "Name of the terraform workspace"
    default: ""
  backend_config:
    type: "string"
    description: |
      "Comma separated list of backend configs to set, e.g. 'foo=bar'"
    default: ""
  backend_config_file:
    type: "string"
    description: "Path to a backend config file"
    default: ""
  cli_config_file:
    type: "string"
    description: "Path to terraform cli config file"
    default: ""
  out:
    type: string
    description: The file path to save your terraform plan to. Set this to "" if you are using terraform cloud.
    default: "plan.out"
  timeout:
    description: Configure a custom timeout limit
    type: string
    default: 10m
  parallelism:
    description: "Limit the number of concurrent operation Terraform is running. Defaults to 10"
    type: integer
    default: 10
  lock-timeout:
    description: Configure a custom state lock timeout
    type: string
    default: 30s
  lock:
    description: Enable the lock on the state file or not
    type: boolean
    default: true

steps:
  - run:
      name: terraform plan
      no_output_timeout: <<parameters.timeout>>
      environment:
        TF_PARAM_DESTROY: <<parameters.destroy_plan>>
        TF_PARAM_PATH: <<parameters.path>>
        TF_PARAM_VAR: <<parameters.var>>
        TF_PARAM_VAR_FILE: <<parameters.var_file>>
        TF_PARAM_WORKSPACE: <<parameters.workspace>>
        TF_PARAM_BACKEND_CONFIG: <<parameters.backend_config>>
        TF_PARAM_BACKEND_CONFIG_FILE: <<parameters.backend_config_file>>
        TF_PARAM_CLI_CONFIG_FILE: <<parameters.cli_config_file>>
        TF_PARAM_OUT: << parameters.out >>
        TF_PARAM_LOCK_TIMEOUT: << parameters.lock-timeout >>
        TF_PARAM_LOCK: << parameters.lock >>
      command: <<include(scripts/plan.sh)>>
